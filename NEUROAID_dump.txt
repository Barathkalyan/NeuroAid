# File: static/css/progress.css
```css
/* CSS Variables for consistency */
:root {
  --primary: #7c3aed;
  --secondary: #f9faff;
  --accent: #d4bfff;
  --glass-bg: rgba(255, 255, 255, 0.9);
  --glass-border: rgba(200, 200, 200, 0.3);
  --shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
  --header-bg: linear-gradient(90deg, #a78bfa 0%, #c084fc 100%);
  --text-primary: #1f2937;
  --text-secondary: #6b7280;
}

/* General reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Inter', sans-serif;
}

/* Body styling */
body {
  background: var(--secondary);
  display: flex;
  min-height: 100vh;
}

/* App container */
.app-container {
  display: flex;
  min-height: 100vh;
  width: 100%;
}

/* Sidebar */
.sidebar {
  width: 260px;
  background: var(--glass-bg);
  backdrop-filter: blur(10px);
  border-right: 1px solid var(--glass-border);
  padding: 24px;
  display: flex;
  flex-direction: column;
  gap: 32px;
  position: fixed;
  height: 100vh;
  z-index: 100;
}

.logo {
  display: flex;
  align-items: center;
  gap: 12px;
}

.logo i {
  font-size: 2rem;
  color: var(--primary);
}


.logo h1 span {
  color: var(--primary);
}

.sidebar nav {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.sidebar nav a {
  color: var(--text-primary);
  text-decoration: none;
  font-size: 1rem;
  font-weight: 500;
  padding: 12px 16px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  gap: 12px;
  transition: background 0.3s, color 0.3s;
}

.sidebar nav a:hover,
.sidebar nav a.active {
  background: var(--primary);
  color: #fff;
}

/* Wrapper for content */
.wrapper {
  flex: 1;
  margin-left: 260px;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

/* Main content */
.main-content {
  flex: 1;
  padding: 24px;
  width: 1200px;
  width: 100%;
  margin: 0 auto; 
}

/* Header */
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px 24px;
  background: var(--header-bg);
  border-radius: 12px;
  backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border);
  margin-bottom: 24px;
}

.search-bar {
  display: flex;
  align-items: center;
  gap: 16px;
  background: rgba(255, 255, 255, 0.3);
  padding: 14px 20px;
  border-radius: 10px;
  width: 450px;
  max-width: 100%;
}

.search-bar i {
  color: #fff;
  font-size: 1.5rem;
}

.search-bar input {
  background: transparent;
  border: none;
  color: #fff;
  font-size: 1.2rem;
  outline: none;
  width: 100%;
}

.search-bar input::placeholder {
  color: rgba(255, 255, 255, 0.7);
  font-size: 1.2rem;
}

.profile {
  display: flex;
  align-items: center;
  gap: 12px;
  cursor: pointer;
}

.profile img {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  border: 2px solid #fff;
  object-fit: cover;
}

.profile span {
  color: #fff;
  font-size: 1rem;
  font-weight: 500;
}

.profile i {
  color: #fff;
  font-size: 1.2rem;
}

/* Stats section */
.stats-section {
  margin-bottom: 32px;
}

.stats-section h2 {
  font-size: 32px;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 24px;
  display: flex;
  align-items: center;
  gap: 12px;
}

.stats-section h2 i {
  color: var(--primary);
  font-size: 2.2rem;
}

.stats-boxes {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 30px;
  width: 100%; }

.stat-box {
  background: var(--glass-bg);
  border-radius: 16px;
  height: 120px;
  padding: 24px;
  border: 5px solid var(--glass-border);
  backdrop-filter: blur(12px);
  box-shadow: var(--shadow);
  display: flex;
  align-items: center;
  gap: 16px;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.stat-box:hover {
  transform: translateY(-8px);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.1);
}

.stat-box i {
  font-size: 2.2rem;
  color: var(--primary);
  background: var(--secondary);
  border-radius: 12px;
  padding: 12px;
  min-width: 48px;
  min-height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.stat-box h3 {
  font-size: 25px;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 8px;
}

.stat-box p {
  font-size: 20px;
  color: var(--text-secondary);
  font-weight: 500;
  line-height: 1.5;
  letter-spacing: 1px;
}

/* Chart section */
.chart-section {
  margin-bottom: 32px;
}

.chart-section h2 {
  font-size: 32px;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 24px;
  display: flex;
  align-items: center;
  gap: 12px;
}

.chart-section h2 i {
  color: var(--primary);
  font-size: 2rem;
}

.chart-card {
  background: var(--glass-bg);
  border-radius: 16px;
  padding: 24px;
  border: 1px solid var(--glass-border);
  backdrop-filter: blur(12px);
  box-shadow: var(--shadow);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  width: 100%; /* Ensure chart takes full width */
  height:600px;
}

.chart-card:hover {
  transform: translateY(-8px);
  box-shadow: 10px 12px 40px rgba(0, 0, 0, 0.1);
}

/* Insights section */
.insights-section {
  margin-bottom: 32px;
}

.insights-section h2 {
  font-size: 30px;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 24px;
  display: flex;
  align-items: center;
  gap: 12px;
}

.insights-section h2 i {
  color: var(--primary);
  font-size: 2rem;
}

.insights-content {
  background: var(--glass-bg);
  border-radius: 16px;
  padding: 24px;
  border: 1px solid var(--glass-border);
  backdrop-filter: blur(12px);
  box-shadow: var(--shadow);
  font-size: 1rem;
  color: var(--text-primary);
  line-height: 1.5;
  width: 100%; /* Ensure insights takes full width */
}

/* Footer */
footer {
  text-align: center;
  padding: 20px;
  background: var(--glass-bg);
  color: var(--text-primary);
  font-size: 0.9rem;
  backdrop-filter: blur(4px);
  border-top: 1px solid var(--glass-border);
  margin-top: auto;
  width: 100%;
}
/* Responsive design */
@media (max-width: 900px) {
  .sidebar {
    width: 80px;
    align-items: center;
  }
  .sidebar .logo h1 {
    display: none;
  }
  .sidebar nav a {
    justify-content: center;
    padding: 12px;
  }
  .sidebar nav a span {
    display: none;
  }
  .wrapper {
    margin-left: 80px;
  }
  .main-content {
    padding: 16px;
  }
  .search-bar {
    width: 300px;
  }
  .stats-boxes {
    grid-template-columns: 1fr;
  }
}
@media (max-width: 600px) {
  .sidebar {
    width: 100%;
    height: auto;
    position: static;
    flex-direction: row;
    justify-content: space-between;
    padding: 16px;
  }
  .sidebar nav {
    flex-direction: row;
    gap: 8px;
  }
  .wrapper {
    margin-left: 0;
  }
  .main-content {
    padding: 16px;
  }
  .stats-section h2,
  .chart-section h2,
  .insights-section h2 {
    font-size: 1.6rem;
  }

  .stat-box,
  .chart-card,
  .insights-content {
    padding: 16px;
  }

  .search-bar {
    width: 100%;
    padding: 10px 16px;
  }

  .search-bar i {
    font-size: 1.2rem;
  }

  .search-bar input,
  .search-bar input::placeholder {
    font-size: 1rem;
  }
}

.sidebar nav a {
  color: var(--text-primary);
  text-decoration: none;
  font-size: 1.3rem;
  font-weight: 500;
  padding: 12px 16px;
  border-radius: 8px;
  display: flex;
  align-items: center;
  gap: 18px;
  transition: all 0.3s ease;
}
```

# File: static/js/progress.js
```js
// Wait for the page to fully load before running the script
document.addEventListener('DOMContentLoaded', function () {
    // Get the canvas elements for the charts
    const moodCanvas = document.getElementById('moodChart');
    const confidenceCanvas = document.getElementById('confidenceChart');

    // Function to create both charts with the fetched data
    function createCharts(data) {
        // --- Mood Chart (Line Chart) ---
        const moodCtx = moodCanvas.getContext('2d');
        // Create a gradient for the line color (pink to purple)
        const moodLineGradient = moodCtx.createLinearGradient(0, 0, 0, 300);
        moodLineGradient.addColorStop(0, '#FF6EC7'); // Neon pink
        moodLineGradient.addColorStop(1, '#7879F1'); // Neon purple
        // Create a gradient for the area under the line
        const moodFillGradient = moodCtx.createLinearGradient(0, 0, 0, 300);
        moodFillGradient.addColorStop(0, 'rgba(230, 230, 250, 0.5)');
        moodFillGradient.addColorStop(1, 'rgba(200, 200, 240, 0.1)');

        new Chart(moodCtx, {
            type: 'line', // Line chart for mood
            data: {
                labels: data.labels, // X-axis: days (e.g., ["Jun 15", "Jun 16", ...])
                datasets: [{
                    label: 'Mood',
                    data: data.data, // Y-axis: mood scores (e.g., [3.5, 4.0, ...])
                    borderColor: moodLineGradient,
                    borderWidth: 3,
                    fill: true, // Fill the area under the line
                    backgroundColor: moodFillGradient,
                    tension: 0.4, // Smooth curve
                    pointBackgroundColor: '#FFFFFF',
                    pointBorderColor: '#7879F1',
                    pointBorderWidth: 2,
                    pointRadius: 5
                }]
            },
            options: {
                responsive: true, // Adjusts to container size
                maintainAspectRatio: false, // Allows custom height
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 5, // Mood score range: 0-5
                        min: 0,
                        ticks: { font: { family: "'Poppins', sans-serif", size: 14 } },
                        title: { display: true, text: 'Mood Score', font: { size: 16 } }
                    },
                    x: {
                        ticks: { font: { family: "'Poppins', sans-serif", size: 14 } },
                        title: { display: true, text: 'Day', font: { size: 14 } }
                    }
                },
                plugins: {
                    legend: { labels: { font: { size: 12 } } },
                    tooltip: { enabled: true } // Show tooltips on hover
                }
            }
        });

        // --- Confidence Chart (Bar Chart) ---
        const confidenceCtx = confidenceCanvas.getContext('2d');
        // Create a gradient for the bars (blue shades)
        const confidenceBarGradient = confidenceCtx.createLinearGradient(0, 0, 0, 300);
        confidenceBarGradient.addColorStop(0, '#00BFFF');
        confidenceBarGradient.addColorStop(1, '#1E90FF');

        new Chart(confidenceCtx, {
            type: 'bar', // Bar chart for confidence
            data: {
                labels: data.labels, // Same days as mood chart
                datasets: [{
                    label: 'Confidence',
                    data: data.confidence, // Y-axis: confidence scores (e.g., [0.7, 0.8, ...])
                    backgroundColor: confidenceBarGradient,
                    borderColor: '#FFFFFF',
                    borderWidth: 1,
                    borderRadius: 5, // Rounded bars
                    barThickness: 30 // Bar width
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 1, // Confidence score range: 0-1
                        min: 0,
                        ticks: { font: { family: "'Poppins', sans-serif", size: 14 } },
                        title: { display: true, text: 'Confidence Score', font: { size: 16 } }
                    },
                    x: {
                        ticks: { font: { family: "'Poppins', sans-serif", size: 14 } },
                        title: { display: true, text: 'Day', font: { size: 14 } }
                    }
                },
                plugins: {
                    legend: { labels: { font: { size: 12 } } },
                    tooltip: { enabled: true }
                }
            }
        });

        // --- Update Streak and Entries ---
        const streakElement = document.getElementById('streak-value');
        if (streakElement) {
            streakElement.textContent = `${data.streak} Days`; // e.g., "3 Days"
        }

        const numEntriesElement = document.getElementById('entries-count');
        if (numEntriesElement) {
            numEntriesElement.textContent = `${data.numEntries} entries`; // e.g., "5 entries"
        }
    }

    // Fetch data from the server
    fetch('/api/mood_data')
        .then(response => {
            // Check if the response is okay (status 200-299)
            if (!response.ok) {
                throw new Error(`Server error: ${response.status}`);
            }
            return response.json(); // Parse the JSON response
        })
        .then(data => {
            console.log('Data received:', data); // Log data for debugging
            createCharts(data); // Create charts with the data
        })
        .catch(error => {
            console.error('Error:', error); // Log any errors
            // Use fallback data if the API fails
            createCharts({
                labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
                data: [3, 3, 3, 3, 3, 3, 3], // Default mood scores
                confidence: [0, 0, 0, 0, 0, 0, 0], // Default confidence scores
                numEntries: 0,
                streak: 0
            });
        });
});
```

# File: templates/progress.html
```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>NeuroAid - Progress</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/remixicon@4.3.0/fonts/remixicon.css" />
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="{{ url_for('static', filename='css/dashboard.css') }}" />
  <link rel="stylesheet" href="{{ url_for('static', filename='css/progress.css') }}" />
  <link rel="stylesheet" href="{{ url_for('static', filename='css/dropdown.css') }}" />
  <link rel="stylesheet" href="{{ url_for('static', filename='css/welcome.css') }}" />
  <link id="theme-stylesheet" rel="stylesheet" href="{{ url_for('static', filename='css/themes/' + theme + '.css') }}">
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.4/dist/chart.umd.min.js"></script>
  <script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
  <script type="text/javascript">
    function googleTranslateElementInit() {
      new google.translate.TranslateElement({
        pageLanguage: 'en', // Default language is English
        includedLanguages: 'en,es,fr', // Supported languages: English, Spanish, French
        layout: google.translate.TranslateElement.InlineLayout.SIMPLE
      }, 'google_translate_element');
    }
  </script>
</head>
<body>
  <div class="app-container">
    <div class="sidebar">
      <div class="logo">
        <i class="ri-brain-line"></i>
        <h1>Neuro<span>Aid</span></h1>
      </div>
      <nav>
        <a href="{{ url_for('index') }}"><i class="ri-home-5-line"></i> Home</a>
        <a href="{{ url_for('journal') }}"><i class="ri-booklet-line"></i> Journal</a>
        <a href="{{ url_for('progress') }}" class="active"><i class="ri-bar-chart-2-line"></i> Progress</a>
        <a href="{{ url_for('vibe') }}"><i class="ri-music-2-line"></i> Vibe</a>
        <a href="{{ url_for('gratitude') }}"><i class="ri-heart-line"></i> Gratitude</a>
        <a href="{{ url_for('settings') }}"><i class="ri-settings-3-line"></i> Settings</a>
        <a href="{{ url_for('profile') }}"><i class="ri-user-line"></i> Profile</a>
        <a href="{{ url_for('logout') }}"><i class="ri-logout-box-line"></i> Logout</a>
      </nav>
    </div>

    <div class="wrapper">
      <main class="main-content">
        <header>
          <div class="welcome-container">
            <div class="welcome-text">Welcome to NeuroAid, {{ user_name }}</div>
            <div class="quote-text"></div>
          </div>
          <div class="profile-dropdown">
            <div class="profile">
              <img src="{{ profile_pic_url | default('https://randomuser.me/api/portraits/men/32.jpg') }}" alt="Profile" id="header-profile-pic" />
              <span>{{ user_name }}</span>
              <i class="ri-arrow-down-s-line"></i>
            </div>
            <div class="dropdown-content" style="z-index: 1000;">
              <div class="user-info">
                <p><i class="ri-user-line"></i> {{ user_name }}</p>
                <p><i class="ri-mail-line"></i> {{ user_email }}</p>
                <p><i class="ri-calendar-line"></i> Joined: {{ joined_date }}</p>
              </div>
              <a href="{{ url_for('profile') }}"><i class="ri-user-line"></i> Profile</a>
              <a href="{{ url_for('settings') }}"><i class="ri-settings-3-line"></i> Settings</a>
              <a href="{{ url_for('logout') }}"><i class="ri-logout-box-line"></i> Logout</a>
            </div>
          </div>
        </header>

        <section class="stats-section">
          <h2><i class="ri-bar-chart-2-line"></i> Your Progress</h2>
          <div class="stats-boxes">
            <div class="stat-box">
              <i class="ri-calendar-line"></i>
              <div>
                <h3>Journaling Streak</h3>
                <p><strong id="streak-value">0 Days</strong></p>
              </div>
            </div>
            <div class="stat-box">
              <i class="ri-booklet-line"></i>
              <div>
                <h3>Total Entries</h3>
                <p><strong id="entries-count">0 entries</strong></p>
              </div>
            </div>
            <div class="stat-box">
              <i class="ri-emotion-happy-line"></i>
              <div>
                <h3>Average Mood</h3>
                <p><strong id="mood">Neutral</strong></p>
              </div>
            </div>
          </div>
        </section>

        <section class="chart-section">
          <h2><i class="ri-line-chart-line"></i> Mood Over Time</h2>
          <div class="chart-card">
            <canvas id="moodChart"></canvas>
          </div>
        </section>

        <section class="chart-section">
          <h2><i class="ri-line-chart-line"></i> Confidence Over Time</h2>
          <div class="chart-card">
            <canvas id="confidenceChart"></canvas>
          </div>
        </section>
      </main>

      <footer>
        <span>© 2025 NeuroAid. Your mental health companion.</span>
      </footer>
    </div>
  </div>
  <script src="{{ url_for('static', filename='js/progress.js') }}"></script>
  <script src="{{ url_for('static', filename='js/dropdown.js') }}"></script>
  <script src="{{ url_for('static', filename='js/welcome.js') }}"></script>
</body>
</html>
```

